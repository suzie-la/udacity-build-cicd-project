name: Frontend Continuous Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'starter/frontend/**'
  workflow_dispatch:  # Allows for manual triggering

env:
  # Set Node.js Version
  NODE_VERSION: '18.14'
  AWS_REGION: 'us-east-1'

defaults:
  run:
    working-directory: ./starter/frontend
    shell: bash

jobs:
  # linting job
  lint:
    name: Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint


  # test job    
  test:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{env.NODE_VERSION}}

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: CI=true npm test

# build job
  build: 
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, test]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with: 
          node-version: ${{env.NODE_VERSION}}
       
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          BACKEND_URL: ${{ secrets.REACT_APP_MOVIE_API_URL }}
          ECR_REPOSITORY: frontend

        run: | 
          docker build --build-arg=REACT_APP_MOVIE_API_URL=$BACKEND_URL -t $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7} .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}
    

  deploy:
    name: "Deploy"
    runs-on: ubuntu-latest
    needs: [build]  # The deploy job will only run after the build job completes successfully
    env:
      EKS_CLUSTER_NAME: 'cluster'
      AWS_REGION: ${{env.AWS_REGION}}

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{env.AWS_REGION}}

      - name: Install kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Deploy to EKS
        env:
          ECR_REGISTRY: ${{ needs.build.outputs['login-ecr.outputs.registry'] }}
          ECR_REPOSITORY: frontend
        run: |
          aws eks --region $AWS_REGION update-kubeconfig --name $EKS_CLUSTER_NAME
          cd ./k8s/
          kustomize edit set image frontend=$ECR_REGISTRY/$ECR_REPOSITORY:${GITHUB_SHA::7}
          kustomize build | kubectl apply -f -